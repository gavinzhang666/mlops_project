name: CI/CD Pipeline

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      # Lint check
      - name: Run lint
        run: flake8 src

      # Unit tests
      - name: Run unit tests
        run: pytest tests/

      # Sanity training (small subset)
      - name: Sanity model training
        run: |
          head -n 500 data/raw/credit_risk_dataset.csv > data/raw/sample.csv
          python src/data_ingest.py --input data/raw/sample.csv
          python src/train_and_tune.py --epochs 1 --small

  cd:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: ci
    steps:
      # Checkout repo
      - name: Checkout
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt dvc[s3] boto3 awscli

      # Configure AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Run full DVC pipeline
      - name: Run DVC pipeline
        run: dvc repro

      # Push DVC artifacts to remote
      - name: Push data/model to remote
        run: dvc push

      # Build and push Docker image to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and push Docker image
        run: |
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/credit-risk-flask:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # Check model file before upload
      - name: Check model file
        run: ls -lh model.tar.gz

      # Upload model.tar.gz to S3
      - name: Upload model to S3
        run: aws s3 cp model.tar.gz s3://mlops-credit-yuhui/model/model.tar.gz

      # Update SageMaker endpoint
      - name: Update SageMaker endpoint
        env:
          SAGEMAKER_ROLE_ARN: ${{ secrets.SAGEMAKER_ROLE_ARN }}
        run: python scripts/update_sagemaker_endpoint.py
